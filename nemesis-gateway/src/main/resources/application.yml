server:
  port: 8788

spring:
  cloud:
    gateway:
      discovery:
        locator:
          #启用通过服务名路由到具体的服务实例 开启服务注册和发现的功能,并将发现的每一个服务自动创建了router
          enabled: false
          lower-case-service-id: true #将请求路径上的服务名配置为小写
      routes:
        - id: nemesis-web  #web
          uri: lb://NEMESIS-WEB #lb:// 开启负载均衡
          predicates:
            - Path=/web/**
          filters:
            - name: RequestRateLimiter
              args:
                 key-resolver: '#{@uriKeyResolver}' #根据url限流
                 redis-rate-limiter.replenishRate: 2500 #允许用户每秒处理多少个请求
                 redis-rate-limiter.burstCapacity: 5000 #令牌桶的容量，允许在一秒钟内完成的最大请求数
            #去掉路径前缀
            - StripPrefix=1
        - id: nemesis-employee #人员
          uri: lb://NEMESIS-EMPLOYEE
          predicates:
            - Path=/emp/**
          filters:
            - StripPrefix=1
        - id: nemesis-system #系统
          uri: lb://NEMESIS-SYSTEM
          predicates:
            - Path=/sys/**
          filters:
            - StripPrefix=1
        - id: nemesis-cargo #货物
          uri: lb://NEMESIS-CARGO
          predicates:
            - Path=/cargo/**
          filters:
            - StripPrefix=1
        - id: nemesis-mouse #老鼠
          uri: lb://NEMESIS-MOUSE
          predicates:
            - Path=/mouse/**
          filters:
            - StripPrefix=1
        - id: nemesis-email #邮件
          uri: lb://NEMESIS-EMAIL
          predicates:
            - Path=/email/**
          filters:
            - StripPrefix=1
      # 全局过滤器
      default-filters:
        # 全局断路器
        - name: Hystrix
          args:
            name: fallbackcmd
            fallbackUri: forward:/fallback
hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds: 15000 # 10s 服务连不上触发回滚




